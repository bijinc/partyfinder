{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { addEvent } from './ServerFunctions';\nimport Geocode from \"react-geocode\";\n\nvar CreateParty =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CreateParty, _React$Component);\n\n  function CreateParty() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateParty);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateParty)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      open: false,\n      name: '',\n      theme: '',\n      start: '',\n      end: '',\n      over21: false,\n      BYOB: false,\n      cover: 0,\n      address: '',\n      lat: '',\n      long: '',\n      coordinates: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClickOpen\", function () {\n      _this.setState({\n        open: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        open: false\n      });\n\n      if (!_this.state.name || !_this.state.lat || !_this.state.long) {\n        return;\n      } // Geocode.fromAddress(this.state.address).then(\n      //   response => {\n      //     console.logt(this.state.address)\n      //     console.log(resonse.results[0].geometry.location)\n      //     this.setState({position: response.results[0].geometry.location});\n      //   },\n      //   error => {\n      //     console.error(error);\n      //   }\n      // );\n\n\n      var event = {\n        name: _this.state.name,\n        hostName: _this.props.user,\n        theme: _this.state.theme,\n        startTime: _this.state.start,\n        endTime: _this.state.end,\n        ageLimit: _this.state.over21,\n        BYOB: _this.state.BYOB,\n        cover: _this.state.cover,\n        address: _this.state.address,\n        coordinates: [_this.state.lat, _this.state.long]\n      };\n      console.log(_this.state.coordinates);\n      addEvent(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwitch\", function (name) {\n      return function (event) {\n        _this.setState(_defineProperty({}, name, event.target.checked));\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(CreateParty, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Geocode.enableDebug();\n      Geocode.fromAddress(\"Eifel Tower\").then(function (response) {\n        var _response$results$0$g = response.results[0].geometry.location,\n            lat = _response$results$0$g.lat,\n            lng = _response$results$0$g.lng;\n        console.log(lat, lng);\n      }, function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleClickOpen\n      }, \"New Event\"), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\"\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\"\n      }, \"Create an Event\"), React.createElement(DialogContent, {\n        style: {\n          flexDirection: 'column'\n        }\n      }, React.createElement(DialogContentText, null), React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Name of Event\",\n        onChange: this.handleChange('name')\n      }), React.createElement(TextField, {\n        margin: \"dense\",\n        id: \"theme\",\n        label: \"Theme\",\n        onChange: this.handleChange('theme')\n      }), React.createElement(TextField, {\n        margin: \"dense\",\n        id: \"lat\",\n        label: \"Latitude\",\n        onChange: this.handleChange('lat')\n      }), React.createElement(TextField, {\n        margin: \"dense\",\n        id: \"long\",\n        label: \"Longitude\",\n        onChange: this.handleChange('long')\n      }), React.createElement(TextField, {\n        id: \"start\",\n        label: \"Start Time\",\n        type: \"time\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: this.handleChange('start')\n      }), React.createElement(TextField, {\n        id: \"end\",\n        label: \"End Time\",\n        type: \"time\",\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: this.handleChange('end')\n      }), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.over21,\n          onChange: this.handleSwitch('over21'),\n          value: \"over21\"\n        }),\n        label: \"21+\"\n      }), React.createElement(FormControlLabel, {\n        control: React.createElement(Switch, {\n          checked: this.state.BYOB,\n          onChange: this.handleSwitch('BYOB'),\n          value: \"BYOB\"\n        }),\n        label: \"BYOB\"\n      })), React.createElement(TextField, {\n        id: \"cover\",\n        label: \"Cover Charge\",\n        type: \"number\",\n        onChange: this.handleChange('cover')\n      })), React.createElement(DialogActions, null, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\"\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\"\n      }, \"Add Event\"))));\n    }\n  }]);\n\n  return CreateParty;\n}(React.Component);\n\nexport { CreateParty as default };","map":null,"metadata":{},"sourceType":"module"}