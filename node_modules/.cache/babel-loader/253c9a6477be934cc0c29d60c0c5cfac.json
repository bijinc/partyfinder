{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Grid from '@material-ui/core/Grid';\nimport Map from './Map';\nimport CreateParty from './CreatePartyDialog';\nimport Profile from './Profile';\nvar drawerWidth = 240;\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex'\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginLeft: 12,\n      marginRight: 20\n    },\n    hide: {\n      display: 'none'\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    drawerHeader: _objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      padding: '0 8px'\n    }, theme.mixins.toolbar, {\n      justifyContent: 'flex-end'\n    }),\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3,\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      marginLeft: -drawerWidth\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen\n      }),\n      marginLeft: 0\n    },\n    sidebar: {\n      flex: 1,\n      justifyContent: 'center'\n    }\n  };\n};\n\nvar PersistentDrawerLeft =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PersistentDrawerLeft, _React$Component);\n\n  function PersistentDrawerLeft() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PersistentDrawerLeft);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PersistentDrawerLeft)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      open: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawerOpen\", function () {\n      _this.setState({\n        open: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDrawerClose\", function () {\n      _this.setState({\n        open: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(PersistentDrawerLeft, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          theme = _this$props.theme;\n      var open = this.state.open;\n      return React.createElement(\"div\", {\n        className: classes.root\n      }, React.createElement(CssBaseline, null), React.createElement(AppBar, {\n        position: \"fixed\",\n        className: classNames(classes.appBar, _defineProperty({}, classes.appBarShift, open))\n      }, React.createElement(Toolbar, {\n        disableGutters: !open\n      }, React.createElement(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"Open drawer\",\n        onClick: this.handleDrawerOpen,\n        className: classNames(classes.menuButton, open && classes.hide)\n      }, React.createElement(MenuIcon, null)), React.createElement(Typography, {\n        variant: \"h6\",\n        color: \"inherit\",\n        noWrap: true\n      }, \"Party Finder\"))), React.createElement(Drawer, {\n        className: classes.drawer,\n        variant: \"persistent\",\n        anchor: \"left\",\n        open: open,\n        classes: {\n          paper: classes.drawerPaper\n        }\n      }, React.createElement(\"div\", {\n        className: classes.drawerHeader\n      }, React.createElement(IconButton, {\n        onClick: this.handleDrawerClose\n      }, theme.direction === 'ltr' ? React.createElement(ChevronLeftIcon, null) : React.createElement(ChevronRightIcon, null))), React.createElement(Divider, null), React.createElement(\"div\", {\n        style: styles.sidebar\n      }, React.createElement(Profile, null), React.createElement(CreateParty, null))), React.createElement(\"main\", {\n        className: classNames(classes.content, _defineProperty({}, classes.contentShift, open))\n      }, React.createElement(\"div\", {\n        className: classes.drawerHeader\n      }), React.createElement(Map, null)));\n    }\n  }]);\n\n  return PersistentDrawerLeft;\n}(React.Component);\n\nexport default withStyles(styles, {\n  withTheme: true\n})(PersistentDrawerLeft);","map":null,"metadata":{},"sourceType":"module"}